{"version":3,"sources":["app.scss","../../../node_modules/sass-svg/scss/main.scss"],"names":[],"mappings":"AAiBA;EACC,+BAX0B;EAY1B,mBAAmB;EACnB,iBAAiB;EACjB,+GAAqG;EACrG,6IAA6I,EAAA;;AAI9I;EACC,aAAa;EACb,kBAlByB;EAmBzB,eAlB2B;EAmB3B,gBAtBiB;EAuBjB,+BAxB0B;EAyB1B,UAAU;EACV,WAAW,EACX;;AAED;EACC,aAnCqB;EAoCrB,cAnCsB;EAoCtB,aAAa;EACb,eAAe,EACf;;AAED;EACC,eAjC2B,EAkC3B;;AAED;EACC,sBAAsB,EACtB;;AAED;EACC,iBAAiB;EACjB,UAAU;EACV,WAAW,EAUX;EAbD;IAME,sBAAsB,EAMtB;IAZF;MASG,eAAe;MACf,0BAA0B,EAC1B;;AAIH;EACC,aAAa;EACb,cAAc;EC9BX,qKAAe,EDiDlB;;AAED;EACC,oBAAoB;EACpB,oBAAoB;EACpB,iCAjF2B;EAkF3B,aAhFuB;EAiFvB,mBAAmB,EAoDnB;EAzDD;IAQE,wBAAwB,EAgDxB;IA7CC;MACC,mBAAmB,EA0CnB;MA3CD;QAIE,kBA9FqB,EAoIrB;QArDL;UAqBM,YAAY;UACZ,aAAa;UACb,aAAa;UACb,OAAO;UACP,sBAAsB;UACtB,mBAAmB;UACnB,oBAAoB;UC9EtB,8KAAe;UDgGb;;;;SAIG,EACH;;AASN;EACC,cAAwB;EACxB,mBAAmB,EACnB;;AAED;EACC,aA3IqB;EA4IrB,gBAAgB,EAChB","file":"app.css","sourcesContent":["@import \"../../../node_modules/sass-svg/index\";\n\n$pipScreenWidth: 800px;\n$pipScreenHeight: 640px;\n\n$pipBorderWidth: 2px;\n\n$pipFont: \"Share Tech Mono\";\n$pipFontsize: 20px;\n\n$pipBackgroundColor: black;\n$pipForegroundColor: #00ff09;\n\n$pipMainMenuHeight: 32px;\n$pipSubMenuHeight: 32px;\n$pipStatusHeight: 32px;\n\n@font-face {\n\tfont-family: $pipFont;\n\tfont-style: normal;\n\tfont-weight: 400;\n\tsrc: local('Share Tech Mono'), local('ShareTechMono-Regular'), url(/fonts/ShareTechMono.woff2) format('woff2');\n\tunicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;\n}\n\n\nhtml, body{\n\theight: 100%;\n\tbackground: $pipBackgroundColor;\n\tcolor: $pipForegroundColor;\n\tfont-size: $pipFontsize;\n\tfont-family: $pipFont;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n#pip-console{\n\twidth: $pipScreenWidth;\n\theight: $pipScreenHeight;\n\tmargin: auto;\n\tdisplay: block;\n}\n\ndiv, a, p, td, th{\n\tcolor: $pipForegroundColor;\n}\n\na{\n\ttext-decoration: none;\n}\n\n.pip-menu{\n\tlist-style: none;\n\tmargin: 0;\n\tpadding: 0;\n\n\tli{\n\t\tdisplay: inline-block;\n\n\t\ta{\n\t\t\tdisplay: block;\n\t\t\ttext-transform: uppercase;\n\t\t}\n\t}\n}\n\n.x{\n\twidth: 100px;\n\theight: 100px;\n\n\t@include svg((\n\t\twidth: 10,\n\t\theight: 55,\n\t\tviewBox: 0 0 10 55,\n\n\t)) {\n\t\t@include svg('line', (\n\t\t\tstroke: red,\n\t\t\tstroke-width: 5,\n\t\t\tx1: 0,\n\t\t\ty1: 25,\n\t\t\tx2: 0,\n\t\t\ty2: 55\n\t\t));\n\n\t};\n\n}\n\n#pip-mainmenu{\n\tpadding: 0 0 0 70px;\n\tmargin-bottom: -4px;\n\tborder-bottom: $pipBorderWidth solid $pipForegroundColor;\n\theight: $pipMainMenuHeight;\n\tmargin-bottom: 7px;\n\n\t.pip-menu{\n\t\tbackground: transparent;\n\n\t\tli{\n\t\t\ta{\n\t\t\t\tpadding: 10px 14px;\n\n\t\t\t\t&.active{\n\t\t\t\t\tbackground: $pipBackgroundColor;\n\n\t\t\t\t\t&:before{\n\n\n\t\t\t\t\t\t//background: $pipBackgroundColor;\n\t\t\t\t\t\twidth: 15px;\n\t\t\t\t\t\theight: 35px;\n\t\t\t\t\t\tcontent: \" \";\n\t\t\t\t\t\ttop: 0;\n\t\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\tmargin: 0 0 0 -16px;\n\n\t\t\t\t\t\t@include svg((\n\t\t\t\t\t\t\tx: 0px,\n\t\t\t\t\t\t\ty: 0px,\n\t\t\t\t\t\t\tviewBox: 0 0 15 35,\n\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t@include svg('polygon', (\n\t\t\t\t\t\t\t\tfill: red,\n\t\t\t\t\t\t\t\tstroke-width: 2,\n\t\t\t\t\t\t\t\tx1: 0, y1: 0,\n\t\t\t\t\t\t\t\tx2: 10, y2: 10,\n\t\t\t\t\t\t\t\tstroke: black\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t};\n\n\n\t\t\t\t\t\t/*@include svg{\n\t\t\t\t\t\t\t@include svg('line', (\n\t\t\t\t\t\t\t\tfill: $pipForegroundColor,\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t}*/\n\t\t\t\t\t}\n\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n#pip-content{\n\theight: $pipScreenHeight - $pipStatusHeight - $pipSubMenuHeight;\n\tbackground: yellow;\n}\n\n#pip-status{\n\theight: $pipStatusHeight;\n\tbackground: red;\n}","@import '../node_modules/sassdash/index';\n\n$_SVG_STACK: null !global;\n$_SVG_DEFAULT_ATTRS: (xmlns: 'http://www.w3.org/2000/svg') !global;\n\n@mixin svg($type: 'svg', $attrs: null) {\n  $previous: $_SVG_STACK;\n  $_SVG_STACK: () !global;\n\n  @content;\n\n  // Argument juggling\n  @if (type-of($type) == 'map'\n    and not $attrs\n    and not $previous\n  ) {\n    $attrs: $type;\n    $type: 'svg';\n  }\n\n  $element: (\n    type: $type,\n    attrs: $attrs,\n    children: $_SVG_STACK\n  );\n\n  @if $previous != null {\n    $_SVG_STACK: $previous !global;\n\n    $_SVG_STACK: append($_SVG_STACK, $element) !global;\n  } @else {\n  //  $element-attrs: map-merge(_get($element, 'attrs'), (xmlns: 'http://www.w3.org/2000/svg'));\n    $element-attrs: _get($element, 'attrs');\n\n    $element: map-merge($element, (attrs: $element-attrs));\n\n   // background-image: url(\"data:image/svg+xml;utf8,#{_encode(svg-render($element))}\");\n    //background: url(\"data:image/svg+xml;#{svg-render($element)}\");\n    background: url(\"data:image/svg+xml;utf8,#{svg-render($element)}\");\n\n    $_SVG_STACK: null !global;\n  }\n}\n\n@function svg-render($element, $args...) {\n  $type: _get($element, 'type');\n  $attrs: _($element,\n    _get 'attrs',\n    _map svg-render-attr,\n    _join ' ');\n  $children: if(length(_get($element, 'children')) > 0,\n    _($element,\n      _get 'children',\n      _map svg-render,\n      _join),\n    _get($element, 'attrs.content'));\n\n  @return if($children and _size($children) > 0,\n    '<#{$type} #{$attrs}>#{$children}</#{$type}>',\n    '<#{$type} #{$attrs}/>');\n}\n\n@function svg-render-attr($value, $key, $args...) {\n  @if (type-of($value) != 'color') {\n    $value: _replace($value, '\\A', ' ');\n  }\n\n  @return '#{$key}=\"#{$value}\"';\n}\n"],"sourceRoot":"/source/"}